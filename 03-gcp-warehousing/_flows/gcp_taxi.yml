id: gcp_taxi
namespace: zoomcamp

concurrency:
  limit: 1

inputs:
  - id: taxi
    type: SELECT
    displayName: Select taxi type
    values: [yellow, green, fhv]
    defaults: green

variables:
  file: "{{inputs.taxi}}_tripdata_{{trigger.date | date('yyyy-MM')}}.parquet"
  file_url: "https://d37ci6vzurychx.cloudfront.net/trip-data/{{vars.file}}"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.file}}"
  data: "{{outputs.parquet_transform.outputFiles[inputs.taxi ~ '_tripdata_' ~ (trigger.date | date('yyyy-MM')) ~ '.parquet']}}"
  table: "{{kv('GCP_DATASET')}}.{{inputs.taxi}}_tripdata_{{trigger.date | date('yyyy_MM')}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      taxi: "{{inputs.taxi}}"

  - id: download_file
    type: io.kestra.plugin.core.http.Download
    uri: "{{ render(vars.file_url) }}"

  # - id: upload_to_gcs
  #   type: io.kestra.plugin.gcp.gcs.Upload
  #   from: "{{ outputs.download_file.uri }}"
  #   to: "{{ render(vars.gcs_file) }}"
    
  - id: parquet_transform
    type: io.kestra.plugin.scripts.python.Script
    warningOnStdErr: false
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
    containerImage: ghcr.io/kestra-io/pydata:latest
    outputFiles:
      - "{{ render(vars.file) }}"
    script: |
      import numpy as np
      import pandas as pd

      df = pd.read_parquet("{{ outputs.download_file.uri }}")
      df.replace({np.nan: None}, inplace=True)

      df.RatecodeID = pd.to_numeric(df.RatecodeID.round(), errors='coerce').astype(pd.Int64Dtype())
      df.passenger_count = pd.to_numeric(df.passenger_count.round(), errors='coerce').astype(pd.Int64Dtype())
      df.payment_type = pd.to_numeric(df.payment_type.round(), errors='coerce').astype(pd.Int64Dtype())
      df.congestion_surcharge = pd.to_numeric(df.congestion_surcharge.round(), errors='coerce').astype(pd.Float64Dtype())

      if "{{inputs.taxi}}" == "green":
        df.ehail_fee = pd.to_numeric(df.ehail_fee.round(), errors='coerce').astype(pd.Float64Dtype())
        df.trip_type = pd.to_numeric(df.trip_type.round(), errors='coerce').astype(pd.Int64Dtype())
      elif "{{inputs.taxi}}" == "yellow":
        df.airport_fee = pd.to_numeric(df.airport_fee.round(), errors='coerce').astype(pd.Float64Dtype())
      
      df.to_parquet("{{ render(vars.file) }}")

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{ render(vars.data) }}"
    to: "{{render(vars.gcs_file)}}"

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: If you'd like to explore Kestra outputs, disable it.
    disabled: false

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"

triggers:
  - id: green_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 9 1 * *"
    inputs:
      taxi: green

  - id: yellow_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 10 1 * *"
    inputs:
      taxi: yellow